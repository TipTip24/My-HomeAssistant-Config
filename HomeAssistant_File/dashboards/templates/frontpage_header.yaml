# lovelace_gen

type: entities
style: |
  ha-card {
    --ha-card-background: transparant;
    box-shadow: none;
    background: var(--primary-color);
    border-radius: none !important;
  }
  .card-content {
    padding: 0
  }
entities:
  - type: custom:hui-vertical-stack-card
    cards:
      - type: custom:state-switch
        entity: input_boolean.system_header_sensors
        default: "on"
        states:
          "on":
            type: horizontal-stack
            cards:
              - type: custom:button-card
                layout: name_state
                name: "[[[ return states['sensor.greeting'].state ]]]"
                show_icon: false
                show_state: false
                styles:
                  card:
                    - height: 40px
                    - box-shadow: none
                  name:
                    - padding: 3
                    - justify-self: start
                    - letter-spacing: -1px
                    - font-size: 1.2em
                    - margin-top: 12px
                    - margin-left: 18px
                    - font-weight: bolder
                    - font-family: "[[[ return states['input_text.font_family'].state ]]]"
                    - color: var(--header-color)
              - !include
                - button_header_badge.yaml
                - icon: "[[[ return `${states['input_text.icon_door'].state}` ]]]"
                  background_color: "[[[ if (states['sensor.current_doors_open'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'red' ]]]"
                  badge: "[[[ if (states['sensor.current_doors_open'].state < 1) return '&nbsp;'; else return states['sensor.current_doors_open'].state ]]]"
                  size: 100%
                  entity: group.all_door_sensors
              - !include
                - button_header_badge.yaml
                - icon: "[[[ return `${states['input_text.icon_window'].state}` ]]]"
                  background_color: "[[[ if (states['sensor.current_windows_open'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'red' ]]]"
                  badge: "[[[ if (states['sensor.current_windows_open'].state < 1) return '&nbsp;'; else return states['sensor.current_windows_open'].state ]]]"
                  entity: group.all_window_sensors
              - !include
                - button_header_badge.yaml
                - icon: "[[[ return `${states['input_text.icon_sensor'].state}` ]]]"
                  background_color: "[[[ if (states['sensor.current_sensors_on'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'red' ]]]"
                  badge: "[[[ if (states['sensor.current_sensors_on'].state < 1) return '&nbsp;'; else return states['sensor.current_sensors_on'].state ]]]"
                  entity: group.all_motion_smoke_sensors
              - !include ../includes/blank-card.yaml
          "off":
            type: horizontal-stack
            cards:
              - type: custom:button-card
                layout: name_state
                name: "[[[ return states['sensor.greeting'].state ]]]"
                show_icon: false
                show_state: false
                styles:
                  card:
                    - height: 40px
                    - box-shadow: none
                  name:
                    - padding: 3
                    - justify-self: start
                    - letter-spacing: -1px
                    - font-size: 1.2em
                    - margin-top: 12px
                    - margin-left: 18px
                    - font-weight: bolder
                    - font-family: "[[[ return states['input_text.font_family'].state ]]]"
                    - color: var(--header-color)
              - !include
                - button_header_transparant.yaml
                - spin_off: false
              - !include ../includes/blank-card.yaml
      - type: conditional
        conditions:
          - state: "on"
            entity: input_boolean.frontpage_header_secondary
        card:
          type: vertical-stack
          cards:
            - type: custom:state-switch
              entity: input_boolean.frontpage_alarm
              states: 
                "on":
                  type: horizontal-stack
                  cards:
                    - !include ../includes/blank-card.yaml
                    - type: custom:swipe-card
                      parameters:
                        allowTouchMove: true
                        grabCursor: true
                        autoplay:
                          disableOnInteraction: false
                      cards:
                        !include ../../user_content/notifications.yaml
                    - type: custom:button-card
                      name: Home
                      icon: "[[[ if (states[`${states['input_text.alarm_entity'].state}`].state == 'disarmed') return 'mdi:lock-open'; else return 'mdi:lock-alert'; ]]]" 
                      size: 75%
                      color: auto
                      entity: input_boolean.dummy1
                      show_name: false
                      deep_press: {{ _global.deep_press.deep_press|default('false') }}
                      show_state: false
                      show_label: false
                      hold_action:
                        action: navigate
                        navigation_path: '/homekit-infused/alarm'
                        haptic: light
                      tap_action:
                        action: navigate
                        navigation_path: '/homekit-infused/alarm'
                        haptic: light
                      styles:
                        card:
                          - --ha-card-background: var(--header-color)
                          - border-radius: 50%
                          - box-shadow: none
                          - width: 30px
                          - height: 30px
                        img_cell:
                          - align-self: start
                          - text-align: start
                      state:
                        - value: "off"
                          icon: 
                          styles:
                            icon:
                              - color: "[[[ if (states[`${states['input_text.alarm_entity'].state}`].state == 'disarmed') return 'LimeGreen'; if (states[`${states['input_text.alarm_entity'].state}`].state == 'armed_home') return 'Orange'; else return 'DarkRed'; ]]]" 
                    - !include ../includes/blank-card.yaml
                "off":
                  type: horizontal-stack
                  cards:
                    - !include ../includes/blank-card.yaml
                    - type: custom:swipe-card
                      parameters:
                        allowTouchMove: true
                        grabCursor: true
                        autoplay:
                          disableOnInteraction: false
                      cards:
                        !include ../../user_content/notifications.yaml